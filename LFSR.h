
#ifndef LFSR_20110314_H_
#define LFSR_20110314_H_

class LFSR {
public:
	//-------------------------------------------------------------------
	// Name: ShiftRegister
	//-------------------------------------------------------------------
	LFSR() : data_(1), shift_(13) {
	}

	//-------------------------------------------------------------------
	// Name: load
	//-------------------------------------------------------------------
	void load(uint8_t value) {
		shift_ = value;
	}

	//-------------------------------------------------------------------
	// Name: read
	//-------------------------------------------------------------------
	uint16_t read() const {
		return data_;
	}

	//-------------------------------------------------------------------
	// Name:
	//-------------------------------------------------------------------
	void reset() {
		data_	= 1;
		shift_	= 13;
	}

	//-------------------------------------------------------------------
	// Name:
	//-------------------------------------------------------------------
	uint16_t shift() {
		const uint32_t feedback = (data_ << shift_) ^ (data_ << 14);
		data_ = (static_cast<uint16_t>(feedback) & 0x4000) | (data_ >> 1);
		return data_;
	}

	//-------------------------------------------------------------------
	// Name:
	//-------------------------------------------------------------------
	LFSR &operator++() {
		shift();
		return *this;
	}

	//-------------------------------------------------------------------
	// Name:
	//-------------------------------------------------------------------
	operator uint16_t() const {
		return data_;
	}

private:
	uint16_t data_;
	uint8_t  shift_;
};

#endif

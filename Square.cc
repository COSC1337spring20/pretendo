
#include "Square.h"

//------------------------------------------------------------------------------
// Name:
//------------------------------------------------------------------------------
Square::Square() : timer_reload_(0), timer_(0), duty_(0), envelope_(0),
		sweep_enable_(0), sweep_period_(0), sweep_negate_(0), sweep_shift_(0),
		enabled_(false) {

}

//------------------------------------------------------------------------------
// Name:
//------------------------------------------------------------------------------
Square::~Square() {

}

//------------------------------------------------------------------------------
// Name:
//------------------------------------------------------------------------------
void Square::enable() {
	enabled_ = true;
}

//------------------------------------------------------------------------------
// Name:
//------------------------------------------------------------------------------
void Square::disable() {
	enabled_ = false;
	length_counter_.clear();
}

//------------------------------------------------------------------------------
// Name: reset
//------------------------------------------------------------------------------
void Square::reset() {

	length_counter_.reset();


		/*
	

	timer_reload_        = 0;
	timer_               = 0;
	duty_                = 0;
	envelope_            = 0;
	sweep_enable_        = 0;
	sweep_period_        = 0;
	sweep_negate_        = 0;
	sweep_shift_         = 0;
	enabled_             = false;
	*/
}

//------------------------------------------------------------------------------
// Name: write_reg0
//------------------------------------------------------------------------------
void Square::write_reg0(uint8_t value) {

	duty_     = (value >> 6) & 0x03;
	envelope_ = (value & 0x1f);

	if(value & 0x20) {
		length_counter_.halt();
	} else {
		length_counter_.resume();
	}
}

//------------------------------------------------------------------------------
// Name: write_reg1
//------------------------------------------------------------------------------
void Square::write_reg1(uint8_t value) {

	sweep_enable_ = (value >> 7) & 0x01;
	sweep_period_ = (value >> 4) & 0x07;
	sweep_negate_ = (value >> 3) & 0x01;
	sweep_shift_  = (value & 7);
}

//------------------------------------------------------------------------------
// Name: write_reg2
//------------------------------------------------------------------------------
void Square::write_reg2(uint8_t value) {

	timer_reload_ = (timer_reload_ & 0xff00) | value;
}

//------------------------------------------------------------------------------
// Name: write_reg3
//------------------------------------------------------------------------------
void Square::write_reg3(uint8_t value) {

	timer_reload_ = (timer_reload_ & 0x00ff) | ((value & 0x07) << 8);
	timer_        = (timer_reload_ << 1) + 2;

	if(enabled_) {
		length_counter_.load((value >> 3) & 0x1f);
	}
}

//------------------------------------------------------------------------------
// Name: tick
//------------------------------------------------------------------------------
void Square::tick() {

}

//------------------------------------------------------------------------------
// Name: enabled
//------------------------------------------------------------------------------
bool Square::enabled() const {
	return enabled_;
}

//------------------------------------------------------------------------------
// Name: length_counter
//------------------------------------------------------------------------------
LengthCounter &Square::length_counter() {
	return length_counter_;
}
